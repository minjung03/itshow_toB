// Generated by view binder compiler. Do not edit!
package com.cookandroid.itshow_tob.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.cookandroid.itshow_tob.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FrameMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton btnCheatList;

  @NonNull
  public final ImageButton btnDibs;

  @NonNull
  public final ImageButton btnHome;

  @NonNull
  public final ImageButton btnUserInfo;

  @NonNull
  public final ImageButton btnWrite;

  @NonNull
  public final FrameLayout frameLayout;

  private FrameMainBinding(@NonNull LinearLayout rootView, @NonNull ImageButton btnCheatList,
      @NonNull ImageButton btnDibs, @NonNull ImageButton btnHome, @NonNull ImageButton btnUserInfo,
      @NonNull ImageButton btnWrite, @NonNull FrameLayout frameLayout) {
    this.rootView = rootView;
    this.btnCheatList = btnCheatList;
    this.btnDibs = btnDibs;
    this.btnHome = btnHome;
    this.btnUserInfo = btnUserInfo;
    this.btnWrite = btnWrite;
    this.frameLayout = frameLayout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FrameMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FrameMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.frame_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FrameMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_cheat_list;
      ImageButton btnCheatList = rootView.findViewById(id);
      if (btnCheatList == null) {
        break missingId;
      }

      id = R.id.btn_dibs;
      ImageButton btnDibs = rootView.findViewById(id);
      if (btnDibs == null) {
        break missingId;
      }

      id = R.id.btn_home;
      ImageButton btnHome = rootView.findViewById(id);
      if (btnHome == null) {
        break missingId;
      }

      id = R.id.btn_user_info;
      ImageButton btnUserInfo = rootView.findViewById(id);
      if (btnUserInfo == null) {
        break missingId;
      }

      id = R.id.btn_write;
      ImageButton btnWrite = rootView.findViewById(id);
      if (btnWrite == null) {
        break missingId;
      }

      id = R.id.frameLayout;
      FrameLayout frameLayout = rootView.findViewById(id);
      if (frameLayout == null) {
        break missingId;
      }

      return new FrameMainBinding((LinearLayout) rootView, btnCheatList, btnDibs, btnHome,
          btnUserInfo, btnWrite, frameLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
