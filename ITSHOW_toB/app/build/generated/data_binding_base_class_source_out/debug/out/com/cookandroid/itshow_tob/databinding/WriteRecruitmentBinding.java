// Generated by view binder compiler. Do not edit!
package com.cookandroid.itshow_tob.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.cookandroid.itshow_tob.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WriteRecruitmentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCategory;

  @NonNull
  public final Button btnImgUpload;

  @NonNull
  public final Button btnSubmit;

  @NonNull
  public final EditText editContent;

  @NonNull
  public final EditText editLocation;

  @NonNull
  public final EditText editMinAmount;

  @NonNull
  public final EditText editOrder;

  @NonNull
  public final EditText editTitle;

  @NonNull
  public final ImageView imgWriteBack;

  @NonNull
  public final RecyclerView recycelerView;

  @NonNull
  public final TextView textCategory;

  @NonNull
  public final TextView textDate;

  private WriteRecruitmentBinding(@NonNull LinearLayout rootView, @NonNull Button btnCategory,
      @NonNull Button btnImgUpload, @NonNull Button btnSubmit, @NonNull EditText editContent,
      @NonNull EditText editLocation, @NonNull EditText editMinAmount, @NonNull EditText editOrder,
      @NonNull EditText editTitle, @NonNull ImageView imgWriteBack,
      @NonNull RecyclerView recycelerView, @NonNull TextView textCategory,
      @NonNull TextView textDate) {
    this.rootView = rootView;
    this.btnCategory = btnCategory;
    this.btnImgUpload = btnImgUpload;
    this.btnSubmit = btnSubmit;
    this.editContent = editContent;
    this.editLocation = editLocation;
    this.editMinAmount = editMinAmount;
    this.editOrder = editOrder;
    this.editTitle = editTitle;
    this.imgWriteBack = imgWriteBack;
    this.recycelerView = recycelerView;
    this.textCategory = textCategory;
    this.textDate = textDate;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WriteRecruitmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WriteRecruitmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.write_recruitment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WriteRecruitmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_category;
      Button btnCategory = rootView.findViewById(id);
      if (btnCategory == null) {
        break missingId;
      }

      id = R.id.btn_imgUpload;
      Button btnImgUpload = rootView.findViewById(id);
      if (btnImgUpload == null) {
        break missingId;
      }

      id = R.id.btn_submit;
      Button btnSubmit = rootView.findViewById(id);
      if (btnSubmit == null) {
        break missingId;
      }

      id = R.id.edit_content;
      EditText editContent = rootView.findViewById(id);
      if (editContent == null) {
        break missingId;
      }

      id = R.id.edit_location;
      EditText editLocation = rootView.findViewById(id);
      if (editLocation == null) {
        break missingId;
      }

      id = R.id.edit_minAmount;
      EditText editMinAmount = rootView.findViewById(id);
      if (editMinAmount == null) {
        break missingId;
      }

      id = R.id.edit_order;
      EditText editOrder = rootView.findViewById(id);
      if (editOrder == null) {
        break missingId;
      }

      id = R.id.edit_title;
      EditText editTitle = rootView.findViewById(id);
      if (editTitle == null) {
        break missingId;
      }

      id = R.id.img_writeBack;
      ImageView imgWriteBack = rootView.findViewById(id);
      if (imgWriteBack == null) {
        break missingId;
      }

      id = R.id.recyceler_view;
      RecyclerView recycelerView = rootView.findViewById(id);
      if (recycelerView == null) {
        break missingId;
      }

      id = R.id.text_category;
      TextView textCategory = rootView.findViewById(id);
      if (textCategory == null) {
        break missingId;
      }

      id = R.id.text_date;
      TextView textDate = rootView.findViewById(id);
      if (textDate == null) {
        break missingId;
      }

      return new WriteRecruitmentBinding((LinearLayout) rootView, btnCategory, btnImgUpload,
          btnSubmit, editContent, editLocation, editMinAmount, editOrder, editTitle, imgWriteBack,
          recycelerView, textCategory, textDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
