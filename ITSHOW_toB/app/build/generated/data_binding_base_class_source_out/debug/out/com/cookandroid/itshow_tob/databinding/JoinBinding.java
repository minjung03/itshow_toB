// Generated by view binder compiler. Do not edit!
package com.cookandroid.itshow_tob.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.cookandroid.itshow_tob.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class JoinBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText IdJoinEdit;

  @NonNull
  public final TextView JoinTitle;

  @NonNull
  public final EditText NameJoinEdit;

  @NonNull
  public final EditText PassJoinEdit;

  @NonNull
  public final Button btnJoin;

  @NonNull
  public final ImageView imgJoinBack;

  private JoinBinding(@NonNull RelativeLayout rootView, @NonNull EditText IdJoinEdit,
      @NonNull TextView JoinTitle, @NonNull EditText NameJoinEdit, @NonNull EditText PassJoinEdit,
      @NonNull Button btnJoin, @NonNull ImageView imgJoinBack) {
    this.rootView = rootView;
    this.IdJoinEdit = IdJoinEdit;
    this.JoinTitle = JoinTitle;
    this.NameJoinEdit = NameJoinEdit;
    this.PassJoinEdit = PassJoinEdit;
    this.btnJoin = btnJoin;
    this.imgJoinBack = imgJoinBack;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static JoinBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static JoinBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.join, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static JoinBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Id_Join_Edit;
      EditText IdJoinEdit = rootView.findViewById(id);
      if (IdJoinEdit == null) {
        break missingId;
      }

      id = R.id.Join_Title;
      TextView JoinTitle = rootView.findViewById(id);
      if (JoinTitle == null) {
        break missingId;
      }

      id = R.id.Name_Join_Edit;
      EditText NameJoinEdit = rootView.findViewById(id);
      if (NameJoinEdit == null) {
        break missingId;
      }

      id = R.id.Pass_Join_Edit;
      EditText PassJoinEdit = rootView.findViewById(id);
      if (PassJoinEdit == null) {
        break missingId;
      }

      id = R.id.btn_Join;
      Button btnJoin = rootView.findViewById(id);
      if (btnJoin == null) {
        break missingId;
      }

      id = R.id.img_JoinBack;
      ImageView imgJoinBack = rootView.findViewById(id);
      if (imgJoinBack == null) {
        break missingId;
      }

      return new JoinBinding((RelativeLayout) rootView, IdJoinEdit, JoinTitle, NameJoinEdit,
          PassJoinEdit, btnJoin, imgJoinBack);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
