// Generated by view binder compiler. Do not edit!
package com.cookandroid.itshow_tob.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.cookandroid.itshow_tob.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChatBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnChatRoomBack;

  @NonNull
  public final Button btnSend;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final EditText etChatting;

  @NonNull
  public final FrameLayout frame;

  @NonNull
  public final ImageView imgViewMap;

  @NonNull
  public final RecyclerView rvList;

  private ActivityChatBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView btnChatRoomBack, @NonNull Button btnSend,
      @NonNull ConstraintLayout constraintLayout, @NonNull EditText etChatting,
      @NonNull FrameLayout frame, @NonNull ImageView imgViewMap, @NonNull RecyclerView rvList) {
    this.rootView = rootView;
    this.btnChatRoomBack = btnChatRoomBack;
    this.btnSend = btnSend;
    this.constraintLayout = constraintLayout;
    this.etChatting = etChatting;
    this.frame = frame;
    this.imgViewMap = imgViewMap;
    this.rvList = rvList;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_chat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_chatRoomBack;
      ImageView btnChatRoomBack = rootView.findViewById(id);
      if (btnChatRoomBack == null) {
        break missingId;
      }

      id = R.id.btn_send;
      Button btnSend = rootView.findViewById(id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = rootView.findViewById(id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.et_chatting;
      EditText etChatting = rootView.findViewById(id);
      if (etChatting == null) {
        break missingId;
      }

      id = R.id.frame;
      FrameLayout frame = rootView.findViewById(id);
      if (frame == null) {
        break missingId;
      }

      id = R.id.img_view_map;
      ImageView imgViewMap = rootView.findViewById(id);
      if (imgViewMap == null) {
        break missingId;
      }

      id = R.id.rv_list;
      RecyclerView rvList = rootView.findViewById(id);
      if (rvList == null) {
        break missingId;
      }

      return new ActivityChatBinding((ConstraintLayout) rootView, btnChatRoomBack, btnSend,
          constraintLayout, etChatting, frame, imgViewMap, rvList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
