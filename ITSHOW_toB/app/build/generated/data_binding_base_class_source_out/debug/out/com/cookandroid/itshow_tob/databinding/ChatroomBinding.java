// Generated by view binder compiler. Do not edit!
package com.cookandroid.itshow_tob.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.cookandroid.itshow_tob.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChatroomBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView chatroomBack;

  @NonNull
  public final EditText chatroomEdit;

  @NonNull
  public final TextView chatroomLocation;

  @NonNull
  public final ImageView chatroomPhotoBtn;

  @NonNull
  public final TextView chatroomTransaction;

  @NonNull
  public final TextView chatroomUsersName;

  private ChatroomBinding(@NonNull LinearLayout rootView, @NonNull ImageView chatroomBack,
      @NonNull EditText chatroomEdit, @NonNull TextView chatroomLocation,
      @NonNull ImageView chatroomPhotoBtn, @NonNull TextView chatroomTransaction,
      @NonNull TextView chatroomUsersName) {
    this.rootView = rootView;
    this.chatroomBack = chatroomBack;
    this.chatroomEdit = chatroomEdit;
    this.chatroomLocation = chatroomLocation;
    this.chatroomPhotoBtn = chatroomPhotoBtn;
    this.chatroomTransaction = chatroomTransaction;
    this.chatroomUsersName = chatroomUsersName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChatroomBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChatroomBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.chatroom, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChatroomBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chatroom_back;
      ImageView chatroomBack = rootView.findViewById(id);
      if (chatroomBack == null) {
        break missingId;
      }

      id = R.id.chatroom_edit;
      EditText chatroomEdit = rootView.findViewById(id);
      if (chatroomEdit == null) {
        break missingId;
      }

      id = R.id.chatroom_location;
      TextView chatroomLocation = rootView.findViewById(id);
      if (chatroomLocation == null) {
        break missingId;
      }

      id = R.id.chatroom_photo_btn;
      ImageView chatroomPhotoBtn = rootView.findViewById(id);
      if (chatroomPhotoBtn == null) {
        break missingId;
      }

      id = R.id.chatroom_transaction;
      TextView chatroomTransaction = rootView.findViewById(id);
      if (chatroomTransaction == null) {
        break missingId;
      }

      id = R.id.chatroom_users_name;
      TextView chatroomUsersName = rootView.findViewById(id);
      if (chatroomUsersName == null) {
        break missingId;
      }

      return new ChatroomBinding((LinearLayout) rootView, chatroomBack, chatroomEdit,
          chatroomLocation, chatroomPhotoBtn, chatroomTransaction, chatroomUsersName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
